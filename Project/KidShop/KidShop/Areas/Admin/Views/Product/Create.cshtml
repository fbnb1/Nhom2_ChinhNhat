@model Kidshop.Areas.Admin.Models.DataModel.Product

<p>
    @Html.ActionLink("Danh sách sản phẩm", "Index", "Product", new { }, new { @class = "btn btn-primary  btn-sm" })
</p>

<!-- Dropzone -->
<link href="~/Areas/Admin/Content/Vendors/dropzone/dist/min/dropzone.min.css" rel="stylesheet">

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Thêm sản phẩm</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <br />
                    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @class = "form-horizontal form-label-left", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownList("CategoryId", null, new { @class = "form-control col-md-7 col-xs12", required = "required" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs12", required = "required" } })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs12", required = "", type = "number" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Qty, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs12", required = "" } })
                                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <img class="col-md-3 col-xs-3 col-sm-3" id="avatar" hidden="hidden" style="border-radius: 25px;" />
                                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs12 file", type = "file", required = "", onchange = "readURL(this);" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Ảnh chi tiết", new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                <div id="dropzoneForm" class="dropzone dz-clickable col-md-12 col-xs-12"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-7 col-xs12", @id = "description" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-3 col-sm-offset-3 col-md-6 col-sm-6 col-xs-12">
                                @Html.CheckBoxFor(model => model.Status, new { @class = "flat col-md-7 col-xs-12", @checked = "" })
                                @Html.Label(" Ẩn/Hiện", new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-4">
                                <button type="reset" class="btn btn-success">Nhập lại</button>
                                <button type="submit" class="btn btn-primary" id="submit-all">Thêm sản phẩm</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
        </div>
    </div>
</div>

<!-- Dropzone.js -->
<script src="~/Areas/Admin/Content/Vendors/dropzone/dist/min/dropzone.min.js"></script>

<script>
    CKEDITOR.replace('description');
    Dropzone.options.dropzoneForm = {
        paramName: "file",
        maxFilesize: 2,
        maxFiles: 8,
        url: "/Product/UploadFile",
        acceptedFiles: "image/*",
        init: function () {
            this.on("maxfilesexceeded", function (file) {
                this.removeFile(file);
                $.alert({
                    title: 'Rất tiếc!',
                    content: 'Giới hạn số lượng hình ảnh là 8!'
                });
            });
        },
        dictDefaultMessage: "Kéo ảnh vào đây hoặc click để upload ảnh sản phẩm",
        addRemoveLinks: true,
        dictRemoveFile: 'Xóa ảnh',
        removedfile: function (file) {
            var name = file.name;
            $.ajax({
                type: 'POST',
                url: '/Product/DeleteFileImage',
                data: "id=" + name
            });
            var _ref;
            return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
        }
    }
    $(window).bind("load", function () {
        $.ajax({
            type: 'GET',
            url: '/Product/Load'
        });
    });


    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#avatar')
                    .attr('src', e.target.result)
                    .width(150);
                $('#avatar')
                    .removeAttr("hidden");
            };

            reader.readAsDataURL(input.files[0]);
        } else {
            $('#avatar')
                    .attr("hidden","hidden");
        }
    }

</script>